const int trigPin = 3; // Pin for sending the ultrasonic signal
const int echoPin = 2; // Pin for receiving the reflected signal
const int buzzer = 10; // Pin for the buzzer
const int ledPin = 13; // Pin for the LED

long duration; // Time taken for the ultrasonic signal to return
int distance; // Calculated distance
int safetyDistance; // Safety distance threshold

void setup() {
    pinMode(trigPin, OUTPUT); // Set trigPin as an output
    pinMode(echoPin, INPUT); // Set echoPin as an input
    pinMode(buzzer, OUTPUT); // Set buzzer as an output
    pinMode(ledPin, OUTPUT); // Set ledPin as an output
    Serial.begin(9600); // Initialize serial communication at 9600 baud rate
}

void loop() {
    digitalWrite(trigPin, LOW); // Ensure trigPin is low
    delayMicroseconds(2); // Wait for 2 microseconds
    digitalWrite(trigPin, HIGH); // Send a 10 microsecond high pulse to trigPin
    delayMicroseconds(10); // Wait for 10 microseconds
    digitalWrite(trigPin, LOW); // Set trigPin low again
    
    duration = pulseIn(echoPin, HIGH); // Measure the duration of the reflected signal
    
    distance = duration * 0.034 / 2; // Calculate the distance in cm
    safetyDistance = distance; // Set safetyDistance to the calculated distance
    
    if (safetyDistance <= 80) { // If the distance is less than or equal to 20 cm
        digitalWrite(buzzer, HIGH); // Activate the buzzer
        digitalWrite(ledPin, HIGH); // Activate the LED
    } else {
        digitalWrite(buzzer, LOW); // Deactivate the buzzer
        digitalWrite(ledPin, LOW); // Deactivate the LED
    }
    
    Serial.print("Distance: "); // Print "Distance: " to the serial monitor
    Serial.println(distance); // Print the calculated distance to the serial monitor
}
